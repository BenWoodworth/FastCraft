group 'net.benwoodworth'
version 'v3.x'

def env = System.getenv()
if (env.containsKey('CIRCLECI')) {
    if (env.containsKey('CIRCLE_TAG')) {
        version = env['CIRCLE_TAG']
    } else {
        version += "-" + env['CIRCLE_SHA1'].substring(0, 7)
    }
}

def plugin_name = 'FastCraft'
def plugin_author = 'Kepler_'
def plugin_description = 'Redefines crafting in Minecraft'
def plugin_version = version
def plugin_website = 'https://github.com/BenWoodworth/FastCraft'

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.spongepowered.plugin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
    ext {
        java_target = '1.8'

        version_gradle = '4.2.1'

        version_kotlin = '1.2.0'
        version_spongegradle = '0.8.1'
        version_shadow = '2.0.1'

        version_bukkit = '1.12-pre5-SNAPSHOT'
        version_sponge = '7.0.0-20171207.130015-65'

        version_klaxon = '0.30'

        version_dagger = '2.11'
        version_jsr250 = '1.0'
        version_javax_inject = '1'

        version_junit5 = '5.0.0-M4'
        version_junit_vintage_engine = '4.12.0-M4'
        version_junit_runner = '1.0.0-M4'
        version_mockito = '2.8.47'
    }

    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "gradle.plugin.org.spongepowered:spongegradle:$version_spongegradle"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$version_junit_runner"
        classpath "com.github.jengelman.gradle.plugins:shadow:$version_shadow"
    }
}

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'http://repo.spongepowered.org/maven' }
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.8.1'

    compile "org.jetbrains.kotlin:kotlin-runtime:$version_kotlin"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$version_kotlin"

    compile "org.bukkit:bukkit:$version_bukkit"
    compile "org.spongepowered:spongeapi:$version_sponge"

    compile "javax.annotation:jsr250-api:$version_jsr250"
    compile "javax.inject:javax.inject:$version_javax_inject"
    compile "com.google.dagger:dagger:$version_dagger"
    kapt "com.google.dagger:dagger-compiler:$version_dagger"

    compile "com.beust:klaxon:$version_klaxon"

    testCompile "org.junit.jupiter:junit-jupiter-api:$version_junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$version_junit5"
    testCompile "org.junit.platform:junit-platform-runner:$version_junit_runner"
    testCompile "org.mockito:mockito-core:$version_mockito"
}
sourceCompatibility = java_target
targetCompatibility = java_target

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile.class).all {
    kotlinOptions.jvmTarget = java_target
}

task ktlint(type: JavaExec) {
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args = ['src/main/**/*.kt']
}

task ktlintFormat(type: JavaExec) {
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args = ['-F', 'src/main/**/*.kt']
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand  plugin_name: plugin_name,
                plugin_author: plugin_author,
                plugin_description: plugin_description,
                plugin_version: plugin_version,
                plugin_website: plugin_website

        include 'plugin.yml'
    }
}

sponge.plugin.meta {
    name = plugin_name
    authors = [plugin_author]
    version = plugin_version
    description = plugin_description
    url = plugin_website
}

sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    main.java.srcDirs += "$buildDir/generated/source/kapt/main"

    test.java.srcDirs += "src/test/kotlin"
}

// Don't create a .jar file with the 'jar' task,
// and create it with 'shadowJar' instead.
jar {
    enabled = false

    baseName(plugin_name)
    classifier('nolib')
}

shadowJar {
    classifier(null)

    dependencies {
        exclude '__gen'

        include dependency("org.jetbrains.kotlin:kotlin-runtime:$version_kotlin")
        include dependency("org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin")
        include dependency("com.google.dagger:dagger:$version_dagger")
        include dependency("javax.inject:javax.inject:$version_javax_inject")
        include dependency("com.beust:klaxon:$version_klaxon")
    }

    def libs = 'net.benwoodworth.fastcraft.libs'
    relocate('kotlin', "${libs}.kotlin")
    relocate('dagger', "${libs}.dagger")
    relocate('javax', "${libs}.javax")
    relocate('com.beust.klaxon', "${libs}.klaxon")
}
