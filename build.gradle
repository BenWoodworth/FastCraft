group "net.benwoodworth"
version "1.0"

def plugin_name = "FastCraft"
def plugin_author = "Kepler_"
def plugin_description = "Redefines crafting in Minecraft"
def plugin_version = version
def plugin_website = "https://github.com/BenWoodworth/FastCraft"

apply plugin: "kotlin"
apply plugin: "org.spongepowered.plugin"

buildscript {
    ext {
        version_kotlin = "1.1.2-5"
        version_spongegradle = "0.8.1"

        version_bukkit = "1.12-R0.1-SNAPSHOT"
        version_sponge = "7.0.0-20170506.092046-5"

        version_dagger = "2.9"
        version_jsr250 = "1.0"
        version_javax_inject = "1"

        version_spek = "1.1.2"
        version_mockito = "2.2.20"
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "gradle.plugin.org.spongepowered:spongegradle:$version_spongegradle"
    }
}

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url "http://repo.spongepowered.org/maven" }
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

configurations {
    ktlint
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.8.1'

    compile "org.jetbrains.kotlin:kotlin-runtime:$version_kotlin"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"

    compile "org.bukkit:bukkit:$version_bukkit"
    compile "org.spongepowered:spongeapi:$version_sponge"

    compile "javax.annotation:jsr250-api:$version_jsr250"
    compile "javax.inject:javax.inject:$version_javax_inject"
    compile "com.google.dagger:dagger:$version_dagger"
    kapt "com.google.dagger:dagger-compiler:$version_dagger"

    testCompile "org.jetbrains.spek:spek-api:$version_spek"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$version_spek"
    testCompile "org.mockito:mockito-core:$version_mockito"
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args = ["src/**/*.kt"]
}

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args = ["-F", "src/**/*.kt"]
}

check {
    dependsOn ktlint
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand  plugin_name: plugin_name,
                plugin_author: plugin_author,
                plugin_description: plugin_description,
                plugin_version: plugin_version,
                plugin_website: plugin_website

        include "plugin.yml"
    }
}

sponge.plugin.meta {
    name = plugin_name
    authors = [plugin_author]
    version = plugin_version
    description = plugin_description
    url = plugin_website
}

// Generate Dagger 2 classes, and include them in the java source set
sourceSets.main.java.srcDirs += "$buildDir/generated/source/kapt/main"
kapt.generateStubs = true

jar {
    baseName(plugin_name)

    from {
        String[] includeInJar = [
                "kotlin-runtime-${version_kotlin}.jar",
                "kotlin-stdlib-${version_kotlin}.jar",
                "dagger-${version_dagger}.jar",
                "javax.inject-${version_javax_inject}.jar"
        ]

        configurations.compile
                .findAll({ includeInJar.contains(it.name) })
                .collect({ it.isDirectory() ? it : zipTree(it) })
    }
}
